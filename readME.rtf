{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww9420\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Scraping City Directories from NYPL: 
\b0 \
\
Issues:\
There are some broken links between the digital collections content and the server, which threw off the dc-download script.\
\
Needed to get as high quality images as possible from the digital collections site\
\
Identify the the UUID of the directory\
\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f1 \cf2 \expnd0\expndtw0\kerning0
API token: y2s7grnbxxd6dk5n\
digital-collections -t y2s7grnbxxd6dk5n -u 4ad95a70-317a-0134-d1af-00505686a51c\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 \
\
\pard\pardeftab720\sl280\partightenfactor0

\f1 \cf2 \expnd0\expndtw0\kerning0
For getting the JSON output from the API:\
digital-collections -t y2s7grnbxxd6dk5n -u [] -o /Users/dpm2159/Desktop/cd_download/[].json\
\
Then run script to process unstructured JSON into a list of links:\
\
const fs = require('fs');\
const path = require('path');\
const glob = require('glob');\
const folder = '..';\
const folder_store = path.resolve(__dirname, folder);\
\
//Get Files and Generate JSON\
glob(folder_store + '**/*.json', \{\}, (err, files)=> \{\
  //How many JSON files?\
  console.log('>>>>Found '+ files.length + ' JSON files<<<<')\
  //Loop through JSON files in folder\
  for (var i = 0; i < files.length; i++) \{\
    fs.readFile(files[i], (err, data) => \{\
      if (err) throw err;\
      //Parse JSON of each file\
      var output = JSON.parse(data);\
      links = []\
      imageIDs = []\
      //Loop through every element of file, find every highResLink\
      for (var e = 0; e < output.length; e++) \{\
        var obj = \{\
          highResLink : output[e]['highResLink']\
        \}\
        links.push(obj);\
      \}\
      console.log('Preparing to write ' + links.length + ' links into' + output[i]['uuid'] + '.txt')\
      var to_write = JSON.stringify(links);\
      console.log(links)\
      var text_to_write = links.map((\{ highResLink \}) => highResLink).join('\\n');\
      console.log(text_to_write);\
      fs.writeFile('WGET'+ output[i]['uuid'] + '.txt', text_to_write, 'ascii', (err) => \{\
        if (err) throw err;\
        console.log('completed ' + output[i]['uuid'] + '.txt');\
    \})\
  \})\
\}\
\});
\f0 \cf0 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
}